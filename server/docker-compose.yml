services:
  logout-all-server:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: logout-all-server
    env_file:
      - .env
    environment:
      - NODE_ENV=dev
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - MONGODB_URI=mongodb://mongo:27017/logout-all
      - REDIS_URL=redis://redis:6379
      - SERVER_ID=server-dev-1
    ports:
      - "3001:3001"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - logout-all-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mongo:
    image: mongo:7.0-jammy
    container_name: logout-all-mongo
    environment:
      - MONGO_INITDB_DATABASE=logout-all
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - logout-all-network
    restart: unless-stopped
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.2-alpine
    container_name: logout-all-redis
    ports:
      - "6379:6379"
    networks:
      - logout-all-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  mongo_data:
    driver: local

networks:
  logout-all-network:
    driver: bridge